@page "/editgame"
@page "/editgame/{id:int}"
@rendermode InteractiveServer

@inject NavigationManager NavigationManager
@inject GamesClient GamesClient
@inject GenresClient GenresClient

<title>@title</title>
<h3>@title</h3>
@if (genres is null || game is null)
{
    <p><em>Loading.....</em></p>
}
else
{
    <EditForm Model="@game" FormName="editGame" OnValidSubmit="HandleSubmit">
        <div class="row">
            <div class="col-md-4">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-3">
                    <label for="name" class="form-label">Name:</label>
                    <InputText id="name" @bind-Value="game.Name" class="form-control" />
                    <ValidationMessage For="() => game.Name" />
                </div>
                <div class="mb-3">
                    <label for="genre" class="form-label">Genre:</label>
                    <InputSelect id="genre" @bind-Value="game.GenreId" class="form-control">
                        <option value="">Select a genre</option>
                        @foreach (var genre in genres)
                        {
                            <option value="@genre.Id">@genre.Name</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="() => game.GenreId" />

                </div>
                <div class="mb-3">
                    <label for="price" class="form-label">Price:</label>
                    <InputNumber id="price" @bind-Value="game.Price" class="form-control" />
                    <ValidationMessage For="() => game.Price" />
                </div>
                <div class="mb-3">
                    <label for="releaseDate" class="form-label">Release Date:</label>
                    <InputDate id="releaseDate" @bind-Value="game.ReleaseDate" class="form-control">
                    </InputDate>
                </div>
                <button type="submit" class="btn btn-primary">Save</button>
                <a role="button" class="btn btn-secondary" href="/">Cancel</a>
            </div>
        </div>
    </EditForm>
}


@code {
    [Parameter]
    public int? Id { get; set; }

    [SupplyParameterFromForm]
    private GameDetails? game { get; set; }
    private String title {get; set;} = string.Empty;
    private Genre[]? genres;

    protected override void OnInitialized()
    {
        genres = GenresClient.GetGenres();

    }

    protected override void OnParametersSet()
    {
        if(game is not null){
            return;
        }
        if (Id is not null)
        {
            game = GamesClient.GetGame(Id.Value);
            title += $"Edit {game.Name}";
        }
        else
        {
            game = new()
                {
                    Name = string.Empty,
                    ReleaseDate = DateOnly.FromDateTime(DateTime.UtcNow)

                };
            title += $"New Game";

        }


    }

    private void HandleSubmit()
    {
        ArgumentNullException.ThrowIfNull(this.game);

        if(Id is null){
            this.GamesClient.AddGame(this.game);
        }else{
            this.game.Id = Id.Value;
            this.GamesClient.UpdateGame(this.game);
        }

        this.NavigationManager.NavigateTo("/");
    }

}
